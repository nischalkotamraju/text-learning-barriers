const d=async(a,t)=>{var e,o;try{const r="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",n=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"system",content:`You are an AI that helps convert text into visual learning formats for neurodiverse students. Based on the input text and selected format (${t}), provide a structured breakdown that can be used to create visual content. Return a JSON response with: title, description, and sections array containing the visual elements.`},{role:"user",content:`Convert this text into a ${t} format: "${a}"`}],max_tokens:1e3,temperature:.7})});if(!n.ok){const i=await n.text();throw console.error("OpenAI API Error Response:",i),new Error(`OpenAI API error: ${n.status} ${n.statusText} - ${i}`)}const c=await n.json();console.log("OpenAI API Response:",c);const s=(o=(e=c.choices[0])==null?void 0:e.message)==null?void 0:o.content;if(!s)throw console.error("No response from OpenAI API:",c),new Error("No content generated by OpenAI API");let l=s;l=l.replace(/```json\n?/g,"").replace(/```\n?/g,"");try{return JSON.parse(l)}catch(i){console.log("JSON parsing failed, creating structured fallback:",i),console.log("Original text:",s.substring(0,200));const p=s.match(/"title":\s*"([^"]+)"/);return{title:p?p[1]:`${t.charAt(0).toUpperCase()+t.slice(1)} - ${new Date().toLocaleDateString()}`,description:s,sections:[]}}}catch(r){throw console.error("Error analyzing text with OpenAI:",r),r}},u=async(a,t)=>{try{console.log("Generating multiple image variations with Ideogram AI for optimal text quality...");const e=await fetch("http://localhost:3001/api/generate-image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:a,format:t,variations:3})});if(!e.ok){const r=await e.json().catch(()=>({}));throw console.error("Backend proxy error:",r),new Error(`Backend proxy error: ${e.status} ${e.statusText}`)}const o=await e.json();if(console.log("Multiple variations generated successfully via proxy"),!o.variations||o.variations.length===0)throw new Error("No image variations returned from backend proxy");return console.log(`Generated ${o.variations.length} variations with Ideogram AI`),o}catch(e){return console.error("Error generating image with Ideogram:",e),console.log("SKIPPING OpenAI fallback - using placeholder to avoid poor text quality"),{variations:[{id:1,url:await g(a,t),seed:0}],message:"Using placeholder due to API error"}}},g=async(a,t)=>{console.log("Using placeholder image generation"),console.log("Image generation prompt:",a),console.log("Format:",t);const e={comic:"https://via.placeholder.com/1024x1024/4F46E5/FFFFFF?text=Comic+Strip+Generated",flowchart:"https://via.placeholder.com/1024x1024/10B981/FFFFFF?text=Flowchart+Generated",infographic:"https://via.placeholder.com/1024x1024/F59E0B/FFFFFF?text=Infographic+Generated"};return await new Promise(o=>setTimeout(o,1e3)),e[t]};export{d as analyzeTextWithOpenAI,g as generateImagePlaceholder,u as generateImageWithIdeogram};
